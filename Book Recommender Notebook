{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":22796,"sourceType":"datasetVersion","datasetId":17368}],"dockerImageVersionId":31040,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Book Recommender\nPurpose: to explore Retrieval Augmentation Generation.","metadata":{}},{"cell_type":"markdown","source":"## Environment Setup","metadata":{}},{"cell_type":"code","source":"# installations\n!pip install --quiet transformers torch peft huggingface_hub kaggle pinecone lark rank_bm25\n# removed these installations for now: langchain-community langchain-huggingface langchain_pinecone langchain-openai langchain-groq langchainhub","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-19T19:13:54.591441Z","iopub.execute_input":"2025-05-19T19:13:54.591858Z","iopub.status.idle":"2025-05-19T19:15:23.601012Z","shell.execute_reply.started":"2025-05-19T19:13:54.591833Z","shell.execute_reply":"2025-05-19T19:15:23.599806Z"}},"outputs":[{"name":"stdout","text":"\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m363.4/363.4 MB\u001b[0m \u001b[31m4.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m0:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m664.8/664.8 MB\u001b[0m \u001b[31m2.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m0:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m211.5/211.5 MB\u001b[0m \u001b[31m7.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m0:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m56.3/56.3 MB\u001b[0m \u001b[31m30.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m127.9/127.9 MB\u001b[0m \u001b[31m7.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m0:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m207.5/207.5 MB\u001b[0m \u001b[31m7.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m0:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m21.1/21.1 MB\u001b[0m \u001b[31m79.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m421.9/421.9 kB\u001b[0m \u001b[31m19.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m111.0/111.0 kB\u001b[0m \u001b[31m5.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25h","output_type":"stream"}],"execution_count":2},{"cell_type":"code","source":"# THE REGS\nimport pandas as pd\nimport numpy as np\nimport kagglehub\nimport torch\nimport nltk\nimport string\nimport os\nimport time\nimport re\n\n# PINECONE\nfrom pinecone import Pinecone, Index\nfrom pinecone import ServerlessSpec\n\n# LANGCHAIN\n# import langchain\n# from langchain.llms import OpenAI\n# from langchain_community.document_loaders.csv_loader import CSVLoader\n# from langchain.text_splitter import CharacterTextSplitter\n# from langchain.chains.conversation.memory import ConversationBufferWindowMemory\n# from langchain.chains import RetrievalQA\n# from langchain_pinecone import PineconeVectorStore\n# from langchain_core.prompts import PromptTemplate\n\n# HUGGINGFACE\nfrom transformers import AutoTokenizer, AutoModel\n# from langchain_community.embeddings import HuggingFaceBgeEmbeddings\n\n# Kaggle environment\nfrom kaggle_secrets import UserSecretsClient\n#secret_value = UserSecretsClient().get_secret(secret_label)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-19T19:15:23.602281Z","iopub.execute_input":"2025-05-19T19:15:23.602570Z","iopub.status.idle":"2025-05-19T19:15:38.932926Z","shell.execute_reply.started":"2025-05-19T19:15:23.602540Z","shell.execute_reply":"2025-05-19T19:15:38.931973Z"}},"outputs":[],"execution_count":3},{"cell_type":"markdown","source":"## Data Setup\n\\+ Some minor reformatting.","metadata":{}},{"cell_type":"code","source":"# Download data set\n# Download latest version\n# path = kagglehub.dataset_download(\"ymaricar/cmu-book-summary-dataset\")\n# print(\"Path to dataset files:\", path)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-19T19:15:38.933964Z","iopub.execute_input":"2025-05-19T19:15:38.934471Z","iopub.status.idle":"2025-05-19T19:15:38.938591Z","shell.execute_reply.started":"2025-05-19T19:15:38.934445Z","shell.execute_reply":"2025-05-19T19:15:38.937555Z"}},"outputs":[],"execution_count":4},{"cell_type":"code","source":"def text_to_csv_pandas(input_file, output_file, column_names, delimiter=None):\n    \"\"\"\n    Reads a text file into a Pandas DataFrame and saves it as a CSV file.\n\n    Args:\n        input_file (str): The path to the input text file.\n        output_file (str): The path to the output CSV file.\n        delimiter (str, optional): The delimiter used in the text file. Defaults to None,\n            which will split each line by whitespace if the text file is not delimited.\n    \"\"\"\n    if delimiter is not None:\n        df = pd.read_csv(input_file, sep=delimiter, names = column_names, header=None)\n    else:\n         df = pd.read_csv(input_file, sep=r'\\s+', names = column_names, header=None)\n    df.to_csv(output_file, index=False, header=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-19T19:15:38.939644Z","iopub.execute_input":"2025-05-19T19:15:38.939987Z","iopub.status.idle":"2025-05-19T19:15:38.986240Z","shell.execute_reply.started":"2025-05-19T19:15:38.939955Z","shell.execute_reply":"2025-05-19T19:15:38.985251Z"}},"outputs":[],"execution_count":5},{"cell_type":"code","source":"columns = ['Wikipedia article ID', \n           'Freebase ID', \n           'Book title', \n           'Author', \n           'Publication date', \n           'Book genres', \n           'Plot summary']\n\ntext_to_csv_pandas('/kaggle/input/cmu-book-summary-dataset/booksummaries.txt', 'data.csv', \n                   column_names = columns, delimiter='\\t')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-19T19:15:38.987071Z","iopub.execute_input":"2025-05-19T19:15:38.987345Z","iopub.status.idle":"2025-05-19T19:15:41.647995Z","shell.execute_reply.started":"2025-05-19T19:15:38.987322Z","shell.execute_reply":"2025-05-19T19:15:41.647058Z"}},"outputs":[],"execution_count":6},{"cell_type":"code","source":"data = pd.read_csv('/kaggle/working/data.csv')\ndata.head(n=3)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-19T19:15:41.649070Z","iopub.execute_input":"2025-05-19T19:15:41.649397Z","iopub.status.idle":"2025-05-19T19:15:42.246119Z","shell.execute_reply.started":"2025-05-19T19:15:41.649373Z","shell.execute_reply":"2025-05-19T19:15:42.245244Z"}},"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"   Wikipedia article ID Freebase ID          Book title           Author  \\\n0                   620     /m/0hhy         Animal Farm    George Orwell   \n1                   843     /m/0k36  A Clockwork Orange  Anthony Burgess   \n2                   986     /m/0ldx          The Plague     Albert Camus   \n\n  Publication date                                        Book genres  \\\n0       1945-08-17  {\"/m/016lj8\": \"Roman \\u00e0 clef\", \"/m/06nbt\":...   \n1             1962  {\"/m/06n90\": \"Science Fiction\", \"/m/0l67h\": \"N...   \n2             1947  {\"/m/02m4t\": \"Existentialism\", \"/m/02xlf\": \"Fi...   \n\n                                        Plot summary  \n0   Old Major, the old boar on the Manor Farm, ca...  \n1   Alex, a teenager living in near-future Englan...  \n2   The text of The Plague is divided into five p...  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Wikipedia article ID</th>\n      <th>Freebase ID</th>\n      <th>Book title</th>\n      <th>Author</th>\n      <th>Publication date</th>\n      <th>Book genres</th>\n      <th>Plot summary</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>620</td>\n      <td>/m/0hhy</td>\n      <td>Animal Farm</td>\n      <td>George Orwell</td>\n      <td>1945-08-17</td>\n      <td>{\"/m/016lj8\": \"Roman \\u00e0 clef\", \"/m/06nbt\":...</td>\n      <td>Old Major, the old boar on the Manor Farm, ca...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>843</td>\n      <td>/m/0k36</td>\n      <td>A Clockwork Orange</td>\n      <td>Anthony Burgess</td>\n      <td>1962</td>\n      <td>{\"/m/06n90\": \"Science Fiction\", \"/m/0l67h\": \"N...</td>\n      <td>Alex, a teenager living in near-future Englan...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>986</td>\n      <td>/m/0ldx</td>\n      <td>The Plague</td>\n      <td>Albert Camus</td>\n      <td>1947</td>\n      <td>{\"/m/02m4t\": \"Existentialism\", \"/m/02xlf\": \"Fi...</td>\n      <td>The text of The Plague is divided into five p...</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":7},{"cell_type":"code","source":"# drop the ID columns\ndata.drop(columns=['Wikipedia article ID', 'Freebase ID'], inplace=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-19T19:40:19.340335Z","iopub.execute_input":"2025-05-19T19:40:19.341255Z","iopub.status.idle":"2025-05-19T19:40:19.395697Z","shell.execute_reply.started":"2025-05-19T19:40:19.341219Z","shell.execute_reply":"2025-05-19T19:40:19.394676Z"}},"outputs":[],"execution_count":38},{"cell_type":"markdown","source":"### Fix the book genre column.","metadata":{}},{"cell_type":"code","source":"# Example case of what we need to fix\ntext = data['Book genres'].iloc[0]\nprint(text)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-19T19:41:10.281869Z","iopub.execute_input":"2025-05-19T19:41:10.282198Z","iopub.status.idle":"2025-05-19T19:41:10.288346Z","shell.execute_reply.started":"2025-05-19T19:41:10.282162Z","shell.execute_reply":"2025-05-19T19:41:10.287473Z"}},"outputs":[{"name":"stdout","text":"{\"/m/016lj8\": \"Roman \\u00e0 clef\", \"/m/06nbt\": \"Satire\", \"/m/0dwly\": \"Children's literature\", \"/m/014dfn\": \"Speculative fiction\", \"/m/02xlf\": \"Fiction\"}\n","output_type":"stream"}],"execution_count":39},{"cell_type":"code","source":"# Text the proper regex expression\nmatches = re.findall(r'\":\\s*\"([^\"]+)\"', text)\nprint(matches)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-19T19:34:35.283701Z","iopub.execute_input":"2025-05-19T19:34:35.284058Z","iopub.status.idle":"2025-05-19T19:34:35.288951Z","shell.execute_reply.started":"2025-05-19T19:34:35.284029Z","shell.execute_reply":"2025-05-19T19:34:35.287969Z"}},"outputs":[{"name":"stdout","text":"['Roman \\\\u00e0 clef', 'Satire', \"Children's literature\", 'Speculative fiction', 'Fiction']\n","output_type":"stream"}],"execution_count":37},{"cell_type":"markdown","source":"\\\\u00e0 is a utf-8 symbol so we must take care of this as well.","metadata":{}},{"cell_type":"code","source":"decoded_genres = [bytes(word, \"utf-8\").decode(\"unicode_escape\") for word in matches]\nprint(decoded_genres) ","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-19T19:47:44.480758Z","iopub.execute_input":"2025-05-19T19:47:44.481167Z","iopub.status.idle":"2025-05-19T19:47:44.487121Z","shell.execute_reply.started":"2025-05-19T19:47:44.481139Z","shell.execute_reply":"2025-05-19T19:47:44.486039Z"}},"outputs":[{"name":"stdout","text":"['Roman à clef', 'Satire', \"Children's literature\", 'Speculative fiction', 'Fiction']\n","output_type":"stream"}],"execution_count":43},{"cell_type":"code","source":"# Perform these two text preprocessing steps for entire column (Book genres)\ndata['Book genres'] = data['Book genres'].apply(lambda row: re.findall(r'\":\\s*\"([^\"]+)\"', str(row)))\ndata['Book genres'] = data['Book genres'].apply(lambda row: [bytes(word, \"utf-8\").decode(\"unicode_escape\") for word in row])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-19T19:59:44.164601Z","iopub.execute_input":"2025-05-19T19:59:44.164951Z","iopub.status.idle":"2025-05-19T19:59:44.239143Z","shell.execute_reply.started":"2025-05-19T19:59:44.164931Z","shell.execute_reply":"2025-05-19T19:59:44.238322Z"}},"outputs":[],"execution_count":53},{"cell_type":"code","source":"data.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-19T20:05:27.321157Z","iopub.execute_input":"2025-05-19T20:05:27.321583Z","iopub.status.idle":"2025-05-19T20:05:27.334354Z","shell.execute_reply.started":"2025-05-19T20:05:27.321557Z","shell.execute_reply":"2025-05-19T20:05:27.333287Z"}},"outputs":[{"execution_count":55,"output_type":"execute_result","data":{"text/plain":"                                  Book title           Author  \\\n0                                Animal Farm    George Orwell   \n1                         A Clockwork Orange  Anthony Burgess   \n2                                 The Plague     Albert Camus   \n3  An Enquiry Concerning Human Understanding       David Hume   \n4                       A Fire Upon the Deep     Vernor Vinge   \n\n  Publication date                                        Book genres  \\\n0       1945-08-17  [Roman à clef, Satire, Children's literature, ...   \n1             1962  [Science Fiction, Novella, Speculative fiction...   \n2             1947  [Existentialism, Fiction, Absurdist fiction, N...   \n3              NaN                                                 []   \n4              NaN  [Hard science fiction, Science Fiction, Specul...   \n\n                                        Plot summary  \n0   Old Major, the old boar on the Manor Farm, ca...  \n1   Alex, a teenager living in near-future Englan...  \n2   The text of The Plague is divided into five p...  \n3   The argument of the Enquiry proceeds by a ser...  \n4   The novel posits that space around the Milky ...  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Book title</th>\n      <th>Author</th>\n      <th>Publication date</th>\n      <th>Book genres</th>\n      <th>Plot summary</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Animal Farm</td>\n      <td>George Orwell</td>\n      <td>1945-08-17</td>\n      <td>[Roman à clef, Satire, Children's literature, ...</td>\n      <td>Old Major, the old boar on the Manor Farm, ca...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>A Clockwork Orange</td>\n      <td>Anthony Burgess</td>\n      <td>1962</td>\n      <td>[Science Fiction, Novella, Speculative fiction...</td>\n      <td>Alex, a teenager living in near-future Englan...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>The Plague</td>\n      <td>Albert Camus</td>\n      <td>1947</td>\n      <td>[Existentialism, Fiction, Absurdist fiction, N...</td>\n      <td>The text of The Plague is divided into five p...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>An Enquiry Concerning Human Understanding</td>\n      <td>David Hume</td>\n      <td>NaN</td>\n      <td>[]</td>\n      <td>The argument of the Enquiry proceeds by a ser...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>A Fire Upon the Deep</td>\n      <td>Vernor Vinge</td>\n      <td>NaN</td>\n      <td>[Hard science fiction, Science Fiction, Specul...</td>\n      <td>The novel posits that space around the Milky ...</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":55},{"cell_type":"code","source":"# decode the other text columns too just in case\ndata['Book title'] = data['Book title'].apply(lambda row: bytes(row, \"utf-8\").decode(\"unicode_escape\"))\ndata['Author'] = data['Author'].apply(lambda row: bytes(str(row), \"utf-8\").decode(\"unicode_escape\"))\ndata['Plot summary'] = data['Plot summary'].apply(lambda row: bytes(str(row), \"utf-8\").decode(\"unicode_escape\"))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-19T20:10:43.642015Z","iopub.execute_input":"2025-05-19T20:10:43.642765Z","iopub.status.idle":"2025-05-19T20:10:43.928643Z","shell.execute_reply.started":"2025-05-19T20:10:43.642731Z","shell.execute_reply":"2025-05-19T20:10:43.927666Z"}},"outputs":[{"name":"stderr","text":"/tmp/ipykernel_69/3285205319.py:4: DeprecationWarning: invalid escape sequence '\\.'\n  data['Plot summary'] = data['Plot summary'].apply(lambda row: bytes(str(row), \"utf-8\").decode(\"unicode_escape\"))\n/tmp/ipykernel_69/3285205319.py:4: DeprecationWarning: invalid escape sequence '\\I'\n  data['Plot summary'] = data['Plot summary'].apply(lambda row: bytes(str(row), \"utf-8\").decode(\"unicode_escape\"))\n/tmp/ipykernel_69/3285205319.py:4: DeprecationWarning: invalid escape sequence '\\i'\n  data['Plot summary'] = data['Plot summary'].apply(lambda row: bytes(str(row), \"utf-8\").decode(\"unicode_escape\"))\n","output_type":"stream"}],"execution_count":61},{"cell_type":"code","source":"data","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-19T20:10:46.195854Z","iopub.execute_input":"2025-05-19T20:10:46.196175Z","iopub.status.idle":"2025-05-19T20:10:46.209888Z","shell.execute_reply.started":"2025-05-19T20:10:46.196150Z","shell.execute_reply":"2025-05-19T20:10:46.209059Z"}},"outputs":[{"execution_count":62,"output_type":"execute_result","data":{"text/plain":"                                              Book title              Author  \\\n0                                            Animal Farm       George Orwell   \n1                                     A Clockwork Orange     Anthony Burgess   \n2                                             The Plague        Albert Camus   \n3              An Enquiry Concerning Human Understanding          David Hume   \n4                                   A Fire Upon the Deep        Vernor Vinge   \n...                                                  ...                 ...   \n16554                                     Under Wildwood         Colin Meloy   \n16555                                  Transfer of Power         Vince Flynn   \n16556                                            Decoded               Jay-Z   \n16557  America Again: Re-becoming The Greatness We Ne...     Stephen Colbert   \n16558                                          Poor Folk  Fyodor Dostoyevsky   \n\n      Publication date                                        Book genres  \\\n0           1945-08-17  [Roman à clef, Satire, Children's literature, ...   \n1                 1962  [Science Fiction, Novella, Speculative fiction...   \n2                 1947  [Existentialism, Fiction, Absurdist fiction, N...   \n3                  NaN                                                 []   \n4                  NaN  [Hard science fiction, Science Fiction, Specul...   \n...                ...                                                ...   \n16554       2012-09-25                                                 []   \n16555       2000-06-01                                [Thriller, Fiction]   \n16556       2010-11-16                                    [Autobiography]   \n16557       2012-10-02                                                 []   \n16558             1846            [Epistolary novel, Speculative fiction]   \n\n                                            Plot summary  \n0       Old Major, the old boar on the Manor Farm, ca...  \n1       Alex, a teenager living in near-future Englan...  \n2       The text of The Plague is divided into five p...  \n3       The argument of the Enquiry proceeds by a ser...  \n4       The novel posits that space around the Milky ...  \n...                                                  ...  \n16554   Prue McKeel, having rescued her brother from ...  \n16555   The reader first meets Rapp while he is doing...  \n16556   The book follows very rough chronological ord...  \n16557   Colbert addresses topics including Wall Stree...  \n16558   Makar Devushkin and Varvara Dobroselova are s...  \n\n[16559 rows x 5 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Book title</th>\n      <th>Author</th>\n      <th>Publication date</th>\n      <th>Book genres</th>\n      <th>Plot summary</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Animal Farm</td>\n      <td>George Orwell</td>\n      <td>1945-08-17</td>\n      <td>[Roman à clef, Satire, Children's literature, ...</td>\n      <td>Old Major, the old boar on the Manor Farm, ca...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>A Clockwork Orange</td>\n      <td>Anthony Burgess</td>\n      <td>1962</td>\n      <td>[Science Fiction, Novella, Speculative fiction...</td>\n      <td>Alex, a teenager living in near-future Englan...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>The Plague</td>\n      <td>Albert Camus</td>\n      <td>1947</td>\n      <td>[Existentialism, Fiction, Absurdist fiction, N...</td>\n      <td>The text of The Plague is divided into five p...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>An Enquiry Concerning Human Understanding</td>\n      <td>David Hume</td>\n      <td>NaN</td>\n      <td>[]</td>\n      <td>The argument of the Enquiry proceeds by a ser...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>A Fire Upon the Deep</td>\n      <td>Vernor Vinge</td>\n      <td>NaN</td>\n      <td>[Hard science fiction, Science Fiction, Specul...</td>\n      <td>The novel posits that space around the Milky ...</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>16554</th>\n      <td>Under Wildwood</td>\n      <td>Colin Meloy</td>\n      <td>2012-09-25</td>\n      <td>[]</td>\n      <td>Prue McKeel, having rescued her brother from ...</td>\n    </tr>\n    <tr>\n      <th>16555</th>\n      <td>Transfer of Power</td>\n      <td>Vince Flynn</td>\n      <td>2000-06-01</td>\n      <td>[Thriller, Fiction]</td>\n      <td>The reader first meets Rapp while he is doing...</td>\n    </tr>\n    <tr>\n      <th>16556</th>\n      <td>Decoded</td>\n      <td>Jay-Z</td>\n      <td>2010-11-16</td>\n      <td>[Autobiography]</td>\n      <td>The book follows very rough chronological ord...</td>\n    </tr>\n    <tr>\n      <th>16557</th>\n      <td>America Again: Re-becoming The Greatness We Ne...</td>\n      <td>Stephen Colbert</td>\n      <td>2012-10-02</td>\n      <td>[]</td>\n      <td>Colbert addresses topics including Wall Stree...</td>\n    </tr>\n    <tr>\n      <th>16558</th>\n      <td>Poor Folk</td>\n      <td>Fyodor Dostoyevsky</td>\n      <td>1846</td>\n      <td>[Epistolary novel, Speculative fiction]</td>\n      <td>Makar Devushkin and Varvara Dobroselova are s...</td>\n    </tr>\n  </tbody>\n</table>\n<p>16559 rows × 5 columns</p>\n</div>"},"metadata":{}}],"execution_count":62},{"cell_type":"markdown","source":"## Data Exploration","metadata":{}},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}